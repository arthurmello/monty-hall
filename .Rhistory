###############################################
###  MONTY HALL PROBLEM SIMULATION
###  AUTHOR: Arthur Mello
###  CREATION DATE: 13/08/2019
###############################################
library(rlist)
wins_on_change = 0
wins_on_stay = 0
n = 10000 # n is the number of times we want to simulate the game. It is arbitrary, but it should
# be high enough to be significant.
for (i in seq(1, n)){
doors = c(1,2,3)
door_with_prize = sample(x=doors, size=1,
replace=FALSE)
# Try1:
door_i_choose = sample(x=doors, size=1,
replace=FALSE)
doors_left = setdiff(doors, door_i_choose)
if (door_i_choose == door_with_prize){
door_host_chose = sample(x=doors_left, size=1,
replace=FALSE)
} else {
door_host_chose = setdiff(doors_left, door_with_prize)
doors_left = door_with_prize
}
# Change:
door_i_choose_2 = setdiff(doors_left, door_host_chose)
# Answers
wc = as.integer(door_i_choose_2==door_with_prize)
ws = as.integer(door_i_choose==door_with_prize)
wins_on_change = wins_on_change + wc
wins_on_stay = wins_on_stay + ws
}
cat("Winning rate on 'switching' strategy: ",
100*wins_on_change/n,"%", ' \n',
"Winning rate on 'staying' strategy: ",
100*wins_on_stay/n,"%", sep = "")
